{"version":3,"sources":["webpack:///./src/views/entireGame.vue?9d0c","webpack:///./src/lib/gameTemplate.js","webpack:///src/views/entireGame.vue","webpack:///./src/views/entireGame.vue?808c","webpack:///./src/views/entireGame.vue","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/core-js/modules/es6.string.iterator.js","webpack:///./src/views/entireGame.vue?d167","webpack:///./node_modules/core-js/library/fn/json/stringify.js","webpack:///./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./src/lib/mobileRouterProtect.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-descriptor.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","id","runningGame","gameEnd","staticStyle","font-size","color","font-weight","_v","_s","lang","_e","staticClass","style","on","click","$event","startGame","startUpBtnText","_l","item","index","key","textContent","src","url","width","endProcessTextFlow","goToPlayerFigureDesign","icon","goToGameDesign","goToStartUpAndEndDesign","reset","save","restore","downloadTheGame","staticRenderFns","gameTemplate","pics","importAll","r","keys","forEach","__webpack_require__","entireGamevue_type_script_lang_js_","name","mixins","mobileRouterProtect","beforeRouteLeave","to","from","next","stopGame","beforeRouteEnter","isIE","ua","navigator","userAgent","is_ie","indexOf","alert","mounted","textFlowRealTimeStyle","JSON","parse","stringify_default","data","watch","_this","top","left","_this$endProcessTextF","animate","animation","animationTime","animationDistance","animationDir","time","start","distance","setInterval","pixelTypeTransfer","clearInterval","_distance","_animate","computed","Object","objectSpread","vuex_esm","playerFigureImgData","playerFigureWidth","endBackgroundStyle","endProcessTextComponent","endProcessPictureComponent","gameContainer","document","querySelector","playerFigure","$store","state","result","image","Image","methods","store","localStorage","setItem","gameLevel","startUpFace","endFace","concat","restoreData","self","getItem","commit","value","Number","match","_startGame","asyncToGenerator","regeneratorRuntime","mark","_callee","levelMap","wrap","_context","prev","length","pureGame","runGame","levelSetting","globalPlayerSetting","stop","apply","arguments","$router","push","_downloadTheGame","_callee3","gameName","blob","link","manipulateHTML","_context3","htmlFile","promise_default","a","_ref","_callee2","resolve","otherSprites","playerSprites","monsterSprites","dragonSpritesSRC","fireSpritesSRC","toFireSRC","getImage","applyChange","_context2","file","changes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","done","change","replace","RegExp","spot","err","return","requireContext","Error","onload","canvas","createElement","height","cx","getContext","body","appendChild","drawImage","toDataURL","remove","pictureGroup","Array","map","_","fileIndex","fileName","all","then","sent","processPictureComponent","processTextComponent","backgroundStyle","startUpBtn","_x","window","prompt","abrupt","t0","Blob","t1","t2","text","URL","createObjectURL","setAttribute","views_entireGamevue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","module","exports","global","inheritIfRequired","dP","f","gOPN","isRegExp","$flags","$RegExp","Base","proto","prototype","re1","re2","CORRECT_NEW","p","tiRE","piRE","fiU","constructor","source","call","proxy","configurable","get","set","it","i","$at","String","iterated","_t","_i","point","O","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_entireGame_vue_vue_type_style_index_0_id_7c255a12_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_entireGame_vue_vue_type_style_index_0_id_7c255a12_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n","core","$JSON","stringify","toIObject","$getOwnPropertyDescriptor","_defineProperty","obj","define_property_default","enumerable","writable","_objectSpread","target","ownKeys","keys_default","get_own_property_symbols_default","filter","sym","get_own_property_descriptor_default","d","created","is_touch_device","MaxTouchPoints","msMaxTouchPoints","getOwnPropertySymbols","$Object","getOwnPropertyDescriptor"],"mappings":"qHAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,MAAA,CAAOC,GAAA,eAAmB,OAAAP,EAAAQ,aAAA,GAAAR,EAAAS,QAAAL,EAAA,OAAwDM,YAAA,CAAaC,YAAA,OAAAC,MAAA,MAAAC,cAAA,QAAsD,CAAAb,EAAAc,GAAAd,EAAAe,GAAA,IAAAf,EAAAgB,KAAA,sGAAAhB,EAAAiB,KAAA,MAAAjB,EAAAQ,YAAAJ,EAAA,OAAoLc,YAAA,cAAAC,MAAAnB,EAAA,iBAAsD,CAAAI,EAAA,UAAee,MAAAnB,EAAA,WAAAoB,GAAA,CAA2BC,MAAA,SAAAC,GAAyB,OAAAtB,EAAAuB,eAAyB,CAAAvB,EAAAc,GAAAd,EAAAe,GAAAf,EAAAwB,mBAAAxB,EAAAyB,GAAAzB,EAAA,8BAAA0B,EAAAC,GAA8F,OAAAvB,EAAA,OAAiBwB,IAAA,WAAAD,EAAAT,YAAA,WAAAC,MAAAO,EAAA,OAAiE,CAAA1B,EAAAc,GAAAd,EAAAe,GAAAW,EAAAG,kBAAqC7B,EAAAyB,GAAAzB,EAAA,iCAAA0B,EAAAC,GAA4D,OAAAvB,EAAA,OAAiBwB,IAAA,cAAAD,EAAAT,YAAA,UAAAC,MAAAO,EAAA,OAAmE,CAAAtB,EAAA,OAAYE,MAAA,CAAOwB,IAAAJ,EAAAK,IAAAC,MAAAN,EAAAM,cAAuC,GAAAhC,EAAAiB,KAAAjB,EAAA,QAAAI,EAAA,OAAuCc,YAAA,UAAAC,MAAAnB,EAAA,oBAAqD,CAAAI,EAAA,OAAYc,YAAA,WAAAC,MAAAnB,EAAA,uBAAyD,CAAAA,EAAAc,GAAAd,EAAAe,GAAAf,EAAAiC,mBAAAJ,gBAAA7B,EAAAyB,GAAAzB,EAAA,iCAAA0B,EAAAC,GAAiH,OAAAvB,EAAA,OAAiBwB,IAAA,WAAAD,EAAAT,YAAA,WAAAC,MAAAO,EAAA,OAAiE,CAAA1B,EAAAc,GAAAd,EAAAe,GAAAW,EAAAG,kBAAqC7B,EAAAyB,GAAAzB,EAAA,oCAAA0B,EAAAC,GAA+D,OAAAvB,EAAA,OAAiBwB,IAAA,cAAAD,EAAAT,YAAA,UAAAC,MAAAO,EAAA,OAAmE,CAAAtB,EAAA,OAAYE,MAAA,CAAOwB,IAAAJ,EAAAK,IAAAC,MAAAN,EAAAM,cAAuC,GAAAhC,EAAAiB,KAAAb,EAAA,OAAyBc,YAAA,kBAA4Bd,EAAA,OAAYc,YAAA,YAAuB,CAAAd,EAAA,UAAec,YAAA,YAAAE,GAAA,CAA4BC,MAAA,SAAAC,GAAyB,OAAAtB,EAAAkC,4BAAsC,CAAA9B,EAAA,qBAA0Bc,YAAA,QAAAZ,MAAA,CAA2B6B,KAAA,UAAenC,EAAAc,GAAA,IAAAd,EAAAe,GAAA,IAAAf,EAAAgB,KAAA,+BAAAZ,EAAA,UAA6Ec,YAAA,YAAAE,GAAA,CAA4BC,MAAA,SAAAC,GAAyB,OAAAtB,EAAAoC,oBAA8B,CAAAhC,EAAA,qBAA0Bc,YAAA,QAAAZ,MAAA,CAA2B6B,KAAA,aAAkBnC,EAAAc,GAAA,IAAAd,EAAAe,GAAA,IAAAf,EAAAgB,KAAA,8BAAAZ,EAAA,UAA4Ec,YAAA,YAAAE,GAAA,CAA4BC,MAAA,SAAAC,GAAyB,OAAAtB,EAAAqC,6BAAuC,CAAAjC,EAAA,qBAA0Bc,YAAA,QAAAZ,MAAA,CAA2B6B,KAAA,YAAiBnC,EAAAc,GAAA,IAAAd,EAAAe,GAAA,IAAAf,EAAAgB,KAAA,kCAAAZ,EAAA,UAAgFgB,GAAA,CAAIC,MAAA,SAAAC,GAAyB,OAAAtB,EAAAsC,WAAqB,CAAAtC,EAAAc,GAAAd,EAAAe,GAAAf,EAAAS,QAAA,IAAAT,EAAAgB,KAAA,mBAAAhB,EAAAgB,KAAA,mBAAAZ,EAAA,UAA2HgB,GAAA,CAAIC,MAAA,SAAAC,GAAyB,OAAAtB,EAAAuC,UAAoB,CAAAvC,EAAAc,GAAAd,EAAAe,GAAA,IAAAf,EAAAgB,KAAA,gBAAAZ,EAAA,UAA6DgB,GAAA,CAAIC,MAAA,SAAAC,GAAyB,OAAAtB,EAAAwC,aAAuB,CAAAxC,EAAAc,GAAAd,EAAAe,GAAA,IAAAf,EAAAgB,KAAA,mBAAAZ,EAAA,UAAgEgB,GAAA,CAAIC,MAAA,SAAAC,GAAyB,OAAAtB,EAAAyC,qBAA+B,CAAAzC,EAAAc,GAAAd,EAAAe,GAAA,IAAAf,EAAAgB,KAAA,sBAAAZ,EAAA,OAAiEc,YAAA,uBACj3FwB,EAAA,8MCDeC,EAAA,699BC2EfC,EAAA,GAEA,SAAAC,EAAAC,GACAA,EAAAC,OAAAC,QAAA,SAAApB,GAAA,OAAAgB,EAAAhB,GAAAkB,EAAAlB,KAFAiB,EAAAI,EAAA,SAKA,IAAAC,EAAA,CACAC,KAAA,aACAC,OAAA,CAAAC,EAAA,MACAC,iBAHA,SAGAC,EAAAC,EAAAC,GACA,MAAAxD,KAAAO,aAIAP,KAAAO,YAAAkD,WACAD,KAJAA,KAMAE,iBAXA,SAWAH,EAAAD,EAAAE,GAEA,SAAAG,IACA,IAAAC,EAAAC,UAAAC,UACAC,EAAAH,EAAAI,QAAA,aAAAJ,EAAAI,QAAA,eAEA,OAAAD,EAEAJ,KACAM,MAAA,yDACAT,GAAA,IAEAA,KAGAU,QA1BA,WA2BAlE,KAAAmE,sBAAAC,KAAAC,MACAC,IAAAtE,KAAAgC,mBAAAd,SAGAqD,KAAA,WACA,OACAhE,YAAA,KACAC,SAAA,EACA2D,sBAAA,OAGAK,MAAA,CACAhE,QADA,WACA,IAAAiE,EAAAzE,KACA,MAAAA,KAAAQ,QAAA,CACAR,KAAAmE,sBAAAO,IAAA1E,KAAAgC,mBAAAd,MAAAwD,IACA1E,KAAAmE,sBAAAQ,KAAA3E,KAAAgC,mBAAAd,MAAAyD,KAHA,IAAAC,EASA5E,KAAAgC,mBAAA6C,QAJAC,EALAF,EAKAE,UACAC,EANAH,EAMAG,cACAC,EAPAJ,EAOAI,kBACAC,EARAL,EAQAK,aAEA,MAAAH,GAAA,GAAAC,GAAA,GAAAC,EAAA,CAEA,IAAAE,EAAA,IAAAH,EACAI,EAAA,EACA,UAAAF,GAAA,UAAAA,EACA,IAAAG,EACA,OAAAH,GAAA,EAAAD,IACAH,EAAAQ,YAAA,WACAZ,EAAAN,sBAAAO,IACAD,EAAAa,kBAAAb,EAAAN,sBAAAO,KACAU,EAAAF,EAAA,GACA,KACAC,GAAA,GACAA,EAAAD,GAAAK,cAAAV,IACA,SAEA,IAAAW,EACA,QAAAP,GAAA,EAAAD,IACAS,EAAAJ,YAAA,WACAZ,EAAAN,sBAAAQ,KACAF,EAAAa,kBAAAb,EAAAN,sBAAAQ,MACAa,EAAAN,EAAA,GACA,KACAC,GAAA,GACAA,EAAAD,GAAAK,cAAAE,IACA,QAIAC,SAAAC,OAAAC,EAAA,KAAAD,CAAA,GACAA,OAAAE,EAAA,KAAAF,CAAA,gBACAG,oBAAA,UACAC,kBAAA,OAEAJ,OAAAE,EAAA,KAAAF,CAAA,aACA,WACA,eACA,eACA,kBACA,wBAEAA,OAAAE,EAAA,KAAAF,CAAA,eACA,aACA,kBACA,mBAEAA,OAAAE,EAAA,KAAAF,CAAA,eACA,uBACA,4BAEAA,OAAAE,EAAA,KAAAF,CAAA,WACAK,mBAAA,oBAEAL,OAAAE,EAAA,KAAAF,CAAA,WACAM,wBAAA,uBACAC,2BAAA,0BACAlE,mBAAA,oBA3BA,CA6BAmE,cA7BA,WA8BA,OAAAC,SAAAC,cAAA,mBAEAC,aAhCA,WAiCA,IAAAzE,EAAA7B,KAAAuG,OAAAC,MAAAF,aAAAG,OACA,SAAA5E,EAAA,YACA,IAAA6E,EAAA,IAAAC,MAEA,OADAD,EAAA7E,IAAA7B,KAAAuG,OAAAC,MAAAF,aAAAG,OACAC,GAEA3F,KAvCA,WAwCA,OAAAf,KAAAuG,OAAAC,MAAAzF,QAGA6F,QAAA,CACAtE,KADA,WAOA,SAAAuE,EAAA3D,EAAAqB,GACAuC,aAAAC,QAAA7D,EAAAoB,IAAAC,IANAsC,EAAA,YAAA7G,KAAAuG,OAAAC,MAAAQ,WACAH,EAAA,cAAA7G,KAAAuG,OAAAC,MAAAS,aACAJ,EAAA,UAAA7G,KAAAuG,OAAAC,MAAAU,SACAjD,MAAA,GAAAkD,OAAA,IAAAnH,KAAAe,KAAA,mBAMAwB,QAXA,WAgBA,SAAA6E,EAAAlE,EAAAmE,GACA,IAAA9C,EAAAuC,aAAAQ,QAAApE,GACA,MAAAqB,GACA8C,EAAAd,OAAAgB,OAAArE,EAAA,eAAAkB,KAAAC,MAAAE,IAPA6C,EAAA,YAAApH,MACAoH,EAAA,cAAApH,MACAoH,EAAA,UAAApH,MACAiE,MAAA,GAAAkD,OAAA,IAAAnH,KAAAe,KAAA,oDAOAsB,MAtBA,WAuBA,MAAArC,KAAAQ,QAIA,OAFAR,KAAAQ,SAAA,OACAR,KAAAO,YAAA,MAIA,MAAAP,KAAAO,aAAAP,KAAAO,YAAAkD,YAGA6B,kBAjCA,SAiCAkC,GACA,uBAAAA,EACAC,OAAAD,EAAAE,MAAA,aAEAF,EAAA,MAGAlG,UAxCA,eAAAqG,EAAAhC,OAAAiC,EAAA,KAAAjC,CAAAkC,mBAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,mBAAAI,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAA1E,MAAA,cAyCAwE,EAAA,GAAAhI,KAAAgI,SAAAI,OAAApB,EAAA,KAAAhH,KAAAgI,SACAhI,KAAAO,YAAA,IAAA8H,EAAA,KAAArI,KAAAmG,eA1CA+B,EAAA1E,KAAA,EA2CAxD,KAAAO,YAAA+H,QACAN,EACAhI,KAAAuI,aACAvI,KAAAwI,qBA9CA,OAgDAxI,KAAAQ,SAAA,EAhDA,wBAAA0H,EAAAO,SAAAV,EAAA/H,SAAA,SAAAsB,IAAA,OAAAqG,EAAAe,MAAA1I,KAAA2I,WAAA,OAAArH,EAAA,GAkDAW,uBAlDA,WAmDAjC,KAAA4I,QAAAC,KAAA,0BAEA1G,eArDA,WAsDAnC,KAAA4I,QAAAC,KAAA,gBAEAzG,wBAxDA,WAyDApC,KAAA4I,QAAAC,KAAA,yBAEArG,gBA3DA,eAAAsG,EAAAnD,OAAAiC,EAAA,KAAAjC,CAAAkC,mBAAAC,KAAA,SAAAiB,IAAA,IAAAC,EAAAC,EAAAnH,EAAAoH,EAyEAC,EAzEA,OAAAtB,mBAAAI,KAAA,SAAAmB,GAAA,eAAAA,EAAAjB,KAAAiB,EAAA5F,MAAA,UAyEA2F,EAzEA,SAyEAE,EAAAhC,GACA,WAAAiC,EAAAC,EAAA,eAAAC,EAAA7D,OAAAiC,EAAA,KAAAjC,CAAAkC,mBAAAC,KAAA,SAAA2B,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvD,EA4FAwD,EAmCAC,EA/HA,OAAArC,mBAAAI,KAAA,SAAAkC,GAAA,eAAAA,EAAAhC,KAAAgC,EAAA3G,MAAA,cA+HA0G,EA/HA,SA+HAE,EAAAC,GAAA,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACA,QAAAC,EAAAC,EAAAC,IAAAP,KAAAC,GAAAI,EAAAC,EAAAnH,QAAAqH,MAAAP,GAAA,OAAAQ,EAAAJ,EAAAlD,MACA4C,IAAAW,QACA,IAAAC,OAAAF,EAAAG,MACA3G,IAAAwG,EAAAtD,SAJA,MAAA0D,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,GAOA,OAAAJ,GA1CAH,EA5FA,SA4FA/G,EAAAkI,EAAAhD,GAEA,QAAAqC,GAAArC,EAAA,CAEA,IAAAvG,EAAAuJ,EAAA,KAAAlI,GACA,QAAAuH,GAAA5I,EAAA,UAAAwJ,MAAA,iBACA,IAAA3E,EAAA,IAAAC,MAEA,OADAD,EAAA7E,MACA,IAAAyH,EAAAC,EAAA,SAAAG,GACAhD,EAAA4E,OAAA,WACA,IAAAC,EAAAnF,SAAAoF,cAAA,UACAD,EAAAxJ,MAAA2E,EAAA3E,MACAwJ,EAAAE,OAAA/E,EAAA+E,OACA,IAAAC,EAAAH,EAAAI,WAAA,MACAvF,SAAAwF,KAAAC,YAAAN,GACAG,EAAAI,UAAApF,EAAA,KACA,IAAA5E,EAAAyJ,EAAAQ,YACAR,EAAAS,SACAtF,EAAAsF,SACAtC,EAAA5H,MAIA,WAAAwH,EAAAC,EAAA,SAAAG,GACA,IAAAuC,EAAAC,MAAAxD,MAAA,MAAAN,WAAA+D,IACA,SAAAC,EAAA1K,GACA,IAAA2K,EAAA3K,EAAA,EACA4K,EAAApJ,EAAA6H,QAAA,MAAAsB,EAAA,KACA,OAAApC,EAAAqC,EAAAlB,KAGA9B,EAAAC,EAAAgD,IAAAN,GAAAO,KAAA,SAAA/F,GAAA,OAAAiD,EAAAjD,QA3HA0D,EAAA3G,KAAA,EACAyG,EAAA,cAAAtH,GADA,cACAgH,EADAQ,EAAAsC,KAAAtC,EAAA3G,KAAA,EAEAyG,EAAA,aAAAtH,GAFA,cAEAiH,EAFAO,EAAAsC,KAAAtC,EAAA3G,KAAA,GAGAyG,EAAA,eAAAtH,GAHA,eAGAkH,EAHAM,EAAAsC,KAAAtC,EAAA3G,KAAA,GAIAyG,EAAA,aAAAtH,EAAA,IAJA,eAIAmH,EAJAK,EAAAsC,KAAAtC,EAAA3G,KAAA,GAKAyG,EAAA,WAAAtH,EAAA,GALA,eAKAoH,EALAI,EAAAsC,KAAAtC,EAAA3G,KAAA,GAMAyG,EAAA,aAAAtH,EAAA,GANA,QAMAqH,EANAG,EAAAsC,KAQAhG,EAAAyD,EAAAb,EAAA,CACA,CACA4B,KAAA,qCACAzD,MAAAH,EAAArB,oBAEA,CACAiF,KAAA,oCACAzD,MAAAH,EAAArF,mBAAAd,OAEA,CACA+J,KAAA,wCACAzD,MAAAH,EAAArF,mBAAA6C,SAEA,CACAoG,KAAA,8BACAzD,MAAAH,EAAArF,mBAAAJ,aAEA,CACAqJ,KAAA,+BACAzD,MAAAH,EAAApB,yBAEA,CACAgF,KAAA,kCACAzD,MAAAH,EAAAnB,4BAEA,CACA+E,KAAA,+BACAzD,MAAAH,EAAAqF,yBAEA,CACAzB,KAAA,4BACAzD,MAAAH,EAAAsF,sBAEA,CACA1B,KAAA,yCACAzD,MAAAH,EAAAuF,iBAEA,CACA3B,KAAA,2BACAzD,MAAAH,EAAAwF,YAEA,CACA5B,KAAA,4BACAzD,MAAAH,EAAA9F,gBAEA,CACA0J,KAAA,wBACAzD,MAAA,GAAAH,EAAAW,SAAAI,OAAApB,EAAA,KAAAK,EAAAW,UAEA,CACAiD,KAAA,2BACAzD,MAAAH,EAAAkB,cAEA,CACA0C,KAAA,6BACAzD,MAAAH,EAAAmB,qBAEA,CACAyC,KAAA,sBACAzD,MAAAmC,GAEA,CACAsB,KAAA,qBACAzD,MAAAoC,GAEA,CACAqB,KAAA,sBACAzD,MAAAqC,GAEA,CACAoB,KAAA,oBACAzD,MAAAsC,GAEA,CACAmB,KAAA,mBACAzD,MAAAuC,GAEA,CACAkB,KAAA,2BACAzD,MAAAwC,KAGAN,EAAA,CAAAjD,IA1FA,yBAAA0D,EAAA1B,SAAAgB,MAAA,gBAAAqD,GAAA,OAAAtD,EAAAd,MAAA1I,KAAA2I,YAAA,KAdAK,EAAA+D,OAAAC,OAAA,oBACA,MAAAhE,EA7DA,CAAAI,EAAA5F,KAAA,eAAA4F,EAAA6D,OAAA,wBAAA7D,EAAA8D,GA8DAC,KA9DA/D,EAAA5F,KAAA,EA8DA2F,EAAAzG,EAAA1C,MA9DA,OAAAoJ,EAAAgE,GAAAhE,EAAAqD,KAAArD,EAAAiE,GA8DA,CACAC,KAAA,cADArE,EA9DA,IAAAG,EAAA8D,GAAA9D,EAAAgE,GAAAhE,EAAAiE,IAiEAvL,EAAAiL,OAAAQ,IAAAC,gBAAAvE,GACAC,EAAA9C,SAAAoF,cAAA,KACApF,SAAAwF,KAAAC,YAAA3C,GACAA,EAAAuE,aAAA,OAAA3L,GACAoH,EAAAuE,aAAA,WAAAzE,EAAA,SACAE,EAAA9H,QACA8H,EAAA8C,SAvEA,yBAAA5C,EAAAX,SAAAM,EAAA/I,SAAA,SAAAwC,IAAA,OAAAsG,EAAAJ,MAAA1I,KAAA2I,WAAA,OAAAnG,EAAA,KC1MoVkL,EAAA,0BCQpVC,EAAgBhI,OAAAiI,EAAA,KAAAjI,CACd+H,EACA5N,EACA2C,GACF,EACA,KACA,WACA,MAIeoL,EAAA,WAAAF,kCCnBfG,EAAAC,QAAiB/K,EAAQ,gCCAzB,IAAAgL,EAAahL,EAAQ,QACrBiL,EAAwBjL,EAAQ,QAChCkL,EAASlL,EAAQ,QAAcmL,EAC/BC,EAAWpL,EAAQ,QAAgBmL,EACnCE,EAAerL,EAAQ,QACvBsL,EAAatL,EAAQ,QACrBuL,EAAAP,EAAAhD,OACAwD,EAAAD,EACAE,EAAAF,EAAAG,UACAC,EAAA,KACAC,EAAA,KAEAC,EAAA,IAAAN,EAAAI,OAEA,GAAI3L,EAAQ,WAAgB6L,GAAsB7L,EAAQ,OAARA,CAAkB,WAGpE,OAFA4L,EAAM5L,EAAQ,OAARA,CAAgB,aAEtBuL,EAAAI,OAAAJ,EAAAK,OAAA,QAAAL,EAAAI,EAAA,QACC,CACDJ,EAAA,SAAAO,EAAAX,GACA,IAAAY,EAAA/O,gBAAAuO,EACAS,EAAAX,EAAAS,GACAG,OAAAxE,IAAA0D,EACA,OAAAY,GAAAC,GAAAF,EAAAI,cAAAX,GAAAU,EAAAH,EACAb,EAAAY,EACA,IAAAL,EAAAQ,IAAAC,EAAAH,EAAAK,OAAAL,EAAAX,GACAK,GAAAQ,EAAAF,aAAAP,GAAAO,EAAAK,OAAAL,EAAAE,GAAAC,EAAAX,EAAAc,KAAAN,GAAAX,GACAY,EAAA/O,KAAAyO,EAAAF,IASA,IAPA,IAAAc,EAAA,SAAA1N,GACAA,KAAA4M,GAAAL,EAAAK,EAAA5M,EAAA,CACA2N,cAAA,EACAC,IAAA,WAAwB,OAAAf,EAAA7M,IACxB6N,IAAA,SAAAC,GAA0BjB,EAAA7M,GAAA8N,MAG1B3M,EAAAsL,EAAAI,GAAAkB,EAAA,EAAoC5M,EAAAsF,OAAAsH,GAAiBL,EAAAvM,EAAA4M,MACrDjB,EAAAS,YAAAX,EACAA,EAAAG,UAAAD,EACEzL,EAAQ,OAARA,CAAqBgL,EAAA,SAAAO,GAGvBvL,EAAQ,OAARA,CAAwB,+CCzCxB,IAAA2M,EAAU3M,EAAQ,OAARA,EAAsB,GAGhCA,EAAQ,OAARA,CAAwB4M,OAAA,kBAAAC,GACxB7P,KAAA8P,GAAAF,OAAAC,GACA7P,KAAA+P,GAAA,GAEC,WACD,IAEAC,EAFAC,EAAAjQ,KAAA8P,GACApO,EAAA1B,KAAA+P,GAEA,OAAArO,GAAAuO,EAAA7H,OAAA,CAAiCZ,WAAAiD,EAAAI,MAAA,IACjCmF,EAAAL,EAAAM,EAAAvO,GACA1B,KAAA+P,IAAAC,EAAA5H,OACA,CAAUZ,MAAAwI,EAAAnF,MAAA,yCCfV,IAAAqF,EAAAlN,EAAA,QAAAmN,EAAAnN,EAAAoN,EAAAF,GAAsiBC,EAAG,wBCAziB,IAAAE,EAAWrN,EAAQ,QACnBsN,EAAAD,EAAAjM,OAAAiM,EAAAjM,KAAA,CAAuCmM,UAAAnM,KAAAmM,YACvCzC,EAAAC,QAAA,SAAA0B,GACA,OAAAa,EAAAC,UAAA7H,MAAA4H,EAAA3H,kCCFA,IAAA6H,EAAgBxN,EAAQ,QACxByN,EAAgCzN,EAAQ,QAAgBmL,EAExDnL,EAAQ,OAARA,CAAuB,sCACvB,gBAAAyM,EAAA9N,GACA,OAAA8O,EAAAD,EAAAf,GAAA9N,iICLe,SAAA+O,EAAAC,EAAAhP,EAAA6F,GAYf,OAXA7F,KAAAgP,EACIC,IAAsBD,EAAAhP,EAAA,CAC1B6F,QACAqJ,YAAA,EACAvB,cAAA,EACAwB,UAAA,IAGAH,EAAAhP,GAAA6F,EAGAmJ,ECTe,SAAAI,EAAAC,GACf,QAAAtB,EAAA,EAAiBA,EAAA/G,UAAAP,OAAsBsH,IAAA,CACvC,IAAAP,EAAA,MAAAxG,UAAA+G,GAAA/G,UAAA+G,GAAA,GAEAuB,EAAkBC,IAAY/B,GAEc,oBAA7BgC,EAAA5H,IACf0H,IAAA9J,OAA+BgK,IAA6BhC,GAAAiC,OAAA,SAAAC,GAC5D,OAAeC,IAAgCnC,EAAAkC,GAAAR,eAI/CI,EAAAlO,QAAA,SAAApB,GACM+O,EAAcM,EAAArP,EAAAwN,EAAAxN,MAIpB,OAAAqP,EArBAhO,EAAAuO,EAAA1D,EAAA,sBAAAkD,iDCAAjD,EAAAC,QAAiB/K,EAAQ,2CCAV6K,EAAA,MACZ2D,QADY,WAELxR,KAAKyR,oBACNxN,MAAK,GAAAkD,OAAkB,IAAdnH,KAAKe,KAAY,sBACzB,sEACDf,KAAK4I,QAAQC,KAAK,OAGxBjC,QAAQ,CACL6K,gBADK,WAEF,MACG,iBAAkB1E,QAClBlJ,UAAU6N,eAAiB,GAC3B7N,UAAU8N,iBAAmB,2BCbzC3O,EAAQ,QACR8K,EAAAC,QAAiB/K,EAAQ,QAAqB2C,OAAAiM,4CCD9C9D,EAAAC,QAAiB/K,EAAQ,8BCAzBA,EAAQ,QACR,IAAA6O,EAAc7O,EAAQ,QAAqB2C,OAC3CmI,EAAAC,QAAA,SAAA0B,EAAA9N,GACA,OAAAkQ,EAAAC,yBAAArC,EAAA9N","file":"js/entireGame.45073d0e.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"entireGame\"}},[(_vm.runningGame!=null&&_vm.gameEnd==false)?_c('div',{staticStyle:{\"font-size\":\"15px\",\"color\":\"red\",\"font-weight\":\"600\"}},[_vm._v(_vm._s(_vm.lang === 1 ? \"上、左、右键移动角色，esc键暂停\" : \"Press [left,right,up] key to move player. Press [esc]key to pause the game.\"))]):_vm._e(),(_vm.runningGame==null)?_c('div',{staticClass:\"startUpFace\",style:(_vm.backgroundStyle)},[_c('button',{style:(_vm.startUpBtn),on:{\"click\":function($event){return _vm.startGame()}}},[_vm._v(_vm._s(_vm.startUpBtnText))]),_vm._l((_vm.processTextComponent),function(item,index){return _c('div',{key:'textItem' + index,staticClass:\"textItem\",style:(item.style)},[_vm._v(_vm._s(item.textContent))])}),_vm._l((_vm.processPictureComponent),function(item,index){return _c('div',{key:'pictureItem' + index,staticClass:\"imgItem\",style:(item.style)},[_c('img',{attrs:{\"src\":item.url,\"width\":item.width}})])})],2):_vm._e(),(_vm.gameEnd)?_c('div',{staticClass:\"endFace\",style:(_vm.endBackgroundStyle)},[_c('pre',{staticClass:\"textFlow\",style:(_vm.textFlowRealTimeStyle)},[_vm._v(_vm._s(_vm.endProcessTextFlow.textContent))]),_vm._l((_vm.endProcessTextComponent),function(item,index){return _c('div',{key:'textItem' + index,staticClass:\"textItem\",style:(item.style)},[_vm._v(_vm._s(item.textContent))])}),_vm._l((_vm.endProcessPictureComponent),function(item,index){return _c('div',{key:'pictureItem' + index,staticClass:\"imgItem\",style:(item.style)},[_c('img',{attrs:{\"src\":item.url,\"width\":item.width}})])})],2):_vm._e(),_c('div',{staticClass:\"gameContainer\"}),_c('div',{staticClass:\"btnGroup\"},[_c('button',{staticClass:\"designBtn\",on:{\"click\":function($event){return _vm.goToPlayerFigureDesign()}}},[_c('font-awesome-icon',{staticClass:\"fa-lg\",attrs:{\"icon\":\"male\"}}),_vm._v(\" \"+_vm._s(_vm.lang===1?\"角色设计\":\"Player\")+\"\\n    \")],1),_c('button',{staticClass:\"designBtn\",on:{\"click\":function($event){return _vm.goToGameDesign()}}},[_c('font-awesome-icon',{staticClass:\"fa-lg\",attrs:{\"icon\":\"gamepad\"}}),_vm._v(\" \"+_vm._s(_vm.lang===1?\"游戏设计\":\"Level\")+\"\\n    \")],1),_c('button',{staticClass:\"designBtn\",on:{\"click\":function($event){return _vm.goToStartUpAndEndDesign()}}},[_c('font-awesome-icon',{staticClass:\"fa-lg\",attrs:{\"icon\":\"laptop\"}}),_vm._v(\" \"+_vm._s(_vm.lang===1?\"界面设计\":\"Interface\")+\"\\n    \")],1),_c('button',{on:{\"click\":function($event){return _vm.reset()}}},[_vm._v(_vm._s(!_vm.gameEnd?(\"\" + (_vm.lang===1?\"结束游戏\":\"reset\")):(\"\" + (_vm.lang === 1 ?\"重置游戏\":\"reset\"))))]),_c('button',{on:{\"click\":function($event){return _vm.save()}}},[_vm._v(_vm._s(_vm.lang === 1 ?\"保存\":\"save\"))]),_c('button',{on:{\"click\":function($event){return _vm.restore()}}},[_vm._v(_vm._s(_vm.lang === 1 ?\"恢复\":\"restore\"))]),_c('button',{on:{\"click\":function($event){return _vm.downloadTheGame()}}},[_vm._v(_vm._s(_vm.lang === 1 ? \"下载\":\"download\"))])]),_c('div',{staticClass:\"downLoadConfirm\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default `\n<!DOCTYPE html>\n<html>\n\n<head>\n   <meta charset=\"utf-8\">\n   <title></title>\n\n</head>\n\n<style>\nhtml{\n   padding-top:100px\n}\n</style>\n\n<body>\n   <div id='game'></div>\n</body>\n<script>\n\n\n\n   let GAME_LEVELS = gameLevelToBeReplaced\n   let gameSettings = gameSettingsToBeReplaced\n   let globalSettings = globalSettingsToBeReplaced\n\n   /* eslint-disable no-console */\n   ////放大倍数\n   var scale = 20;\n   var gameWidth = 700;\n   var gameHeight = 400;\n\n   ////每个actor的图片来源\n\n   let spritesSRC = spritesToBeReplaced\n   let playerSRC = playerToBeReplaced\n   let monsterSRC = monsterToBeReplaced\n   let drgonSRC = drgonToBeReplaced\n   let fireSRC = fileToBeReplaced\n   let dragonToFire = dragonToFireToBeReplaced\n\n   let otherSprites = srcToImage(spritesSRC)\n   let monsterSprites = srcToImage(monsterSRC)\n   let dragonSpritesSRC = srcToImage(drgonSRC);\n   let fireSpritesSRC = srcToImage(fireSRC);\n   let toFireSRC = srcToImage(dragonToFire)\n\n   function getImage(name, length) {\n      if (length == undefined) {\n         let image = new Image();\n         let src = '../src/pic/pureGame/' + name \n         if (src == undefined) throw new Error('no such image')\n         image.src = src\n         return image\n      } else {\n         return Array.apply(null, { length: length }).map(function (_, index) {\n            let fileIndex = index + 1\n            let fileName = name.replace(/[.]/, fileIndex + \".\")\n            return getImage(fileName)\n         })\n      }\n   }\n\n   function srcToImage(src){\n      if (typeof src == 'string'){\n         let image = new Image();\n         image.src = src;\n         return image;\n      }else{\n         return Array.apply(null,{length:src.length}).map(function(_,index){\n            return srcToImage(src[index])\n         })\n      }\n   }\n\n\n\n   ////背景图片\n   //let gameBackgroundImg = document.createElement('img');\n\n   //第一章：基础设置：level、state、actors。。。\n\n   var Level = class Level {\n      constructor(plan) {\n         //地图的基本信息\n         let rows = plan.trim().split(\"\\\\n\").map(l => {\n            l = l.trim();\n            return [...l]\n         });\n         this.height = rows.length;\n         this.width = rows[0].length;\n         this.startActors = [];\n\n         this.rows = rows.map((row, y) => {\n            return row.map((ch, x) => {\n               let type = levelChars[ch];\n               if (typeof type == \"string\") return type;\n               this.startActors.push(\n                  type.create(new Vec(x, y), ch));\n               return \"empty\";\n            });\n         });\n      }\n      touches(pos, size, type) {\n         //某个位置（可以是任何actor的位置） 与 背景（墙、钱）的碰撞测试\n         var xStart = Math.floor(pos.x);\n         var xEnd = Math.ceil(pos.x + size.x);\n         var yStart = Math.floor(pos.y);\n         var yEnd = Math.ceil(pos.y + size.y);\n\n         for (var y = yStart; y < yEnd; y++) {\n            for (var x = xStart; x < xEnd; x++) {\n               let isOutside = x < 0 || x >= this.width ||\n                  y < 0 || y >= this.height;\n               let here = isOutside ? \"wall\" : this.rows[y][x];\n               if (typeof type == \"string\") {\n                  if (here == type) return true;\n               } else if (typeof type == 'object') {\n                  //type必须是array，同时测试与多个type之间的碰撞\n                  if (type.some(a => here == a)) return true\n               }\n            }\n         }\n         return false;\n      }\n   }\n\n   var State = class State {\n      constructor(level, actors, status) {\n         this.level = level;\n         this.actors = actors;\n         this.status = status;\n      }\n\n      static start(level) {\n         return new State(level, level.startActors, \"playing\");\n      }\n\n      get player() {\n         if (this.actors.find(a => a.type == \"player\") == undefined) {\n            throw new Error('here')\n         }\n         return this.actors.find(a => a.type == \"player\");\n      }\n      update(time, keys, gameClass) {\n         let actors = this.actors\n            .map(actor => actor.update(time, this, keys, gameClass));\n         let newState = new State(this.level, actors, this.status);\n         //先看this.status的状态\n         if (newState.status != \"playing\") return newState;\n         //再看player有没有撞lava\n         let player = newState.player;\n         if (this.level.touches(player.pos, player.size, \"lava\")) {\n            return new State(this.level, actors, \"lost\");\n         }\n         //再处理actors之间的碰撞以及增添或删除actors\n         for (let actor of actors) {\n            if (actor != player && overlap(player, actor)) {\n               newState = actor.collide(newState);\n            }\n            if (actor.type == \"fire\" && actor.isGone) {\n               newState = actor.gone(newState)\n            } else if (actor.type == \"dragon\" && actor.fire.isFire) {\n               newState = actor.firing(newState)\n            }\n         }\n         return newState;\n      }\n   }\n\n   var Vec = class Vec {\n      constructor(x, y) {\n         this.x = x; this.y = y;\n      }\n      plus(other) {\n         return new Vec(this.x + other.x, this.y + other.y);\n      }\n      times(factor) {\n         return new Vec(this.x * factor, this.y * factor);\n      }\n   }\n\n   var Player = class Player {\n      constructor(pos, speed, property) {\n         this.pos = pos;\n         this.speed = speed;\n         this.size = new Vec(0.8, 1.5).times(property==undefined?1:property.size)\n         this.playerXSpeed = property == undefined ? 7 : property.speed;\n         this.gravity = 30;\n         this.jumpSpeed = property == undefined ? 17 : property.jumpSpeed;\n      }\n      get type() {\n         return \"player\";\n      }\n      static create(pos) {\n         return new Player(pos.plus(new Vec(0, -2.1)), new Vec(0, 0));\n      }\n      update(time, state, keys, property) {\n         let xSpeed = 0;\n         if (keys.ArrowLeft) xSpeed -= this.playerXSpeed;\n         if (keys.ArrowRight) xSpeed += this.playerXSpeed;\n         let pos = this.pos;\n         let movedX = pos.plus(new Vec(xSpeed * time, 0));\n         if (!state.level.touches(movedX, this.size, \"wall\")) {\n            pos = movedX;\n         }\n         let ySpeed = this.speed.y + time * this.gravity;\n         let movedY = pos.plus(new Vec(0, ySpeed * time));\n         if (!state.level.touches(movedY, this.size, \"wall\")) {\n            pos = movedY;\n         } else if (keys.ArrowUp && ySpeed > 0) {\n            ySpeed = -this.jumpSpeed;\n         } else {\n            ySpeed = 0;\n         }\n         return new Player(pos, new Vec(xSpeed, ySpeed), property);\n      }\n   }\n\n   var Lava = class Lava {\n      constructor(pos, speed, reset) {\n         this.pos = pos;\n         this.speed = speed;\n         this.reset = reset;\n         this.size = new Vec(1, 1)\n      }\n\n      get type() { return \"lava\"; }\n\n      static create(pos, ch) {\n         if (ch == \"=\") {\n            return new Lava(pos, new Vec(2, 0));\n         } else if (ch == \"|\") {\n            return new Lava(pos, new Vec(0, 2));\n         } else if (ch == \"v\") {\n            return new Lava(pos, new Vec(0, 3), pos);\n         }\n      }\n      collide(state) {\n         return new State(state.level, state.actors, \"lost\");\n      }\n      update(time, state) {\n         let newPos = this.pos.plus(this.speed.times(time));\n         if (!state.level.touches(newPos, this.size, \"wall\")) {\n            return new Lava(newPos, this.speed, this.reset);\n         } else if (this.reset) {\n            return new Lava(this.reset, this.speed, this.reset);\n         } else {\n            return new Lava(this.pos, this.speed.times(-1));\n         }\n      }\n   }\n\n   var Coin = class Coin {\n      constructor(pos, basePos, wobble) {\n         this.pos = pos;\n         this.basePos = basePos;\n         this.wobble = wobble;\n         this.size = new Vec(0.6, 0.6);\n         this.wobbleSpeed = 8;\n         this.wobbleDist = 0.07;\n      }\n\n      get type() { return \"coin\"; }\n\n      static create(pos) {\n         let basePos = pos.plus(new Vec(0.2, 0.1));\n         return new Coin(basePos, basePos,\n            Math.random() * Math.PI * 2);\n      }\n      collide(state) {\n         let filtered = state.actors.filter(a => a != this);\n         let status = state.status;\n         if (!filtered.some(a => a.type == \"coin\")) status = \"won\";\n         return new State(state.level, filtered, status);\n      }\n      update(time) {\n         let wobble = this.wobble + time * this.wobbleSpeed;\n         let wobblePos = Math.sin(wobble) * this.wobbleDist;\n         return new Coin(this.basePos.plus(new Vec(0, wobblePos)),\n            this.basePos, wobble);\n      }\n   }\n\n   class Monster {\n      constructor(pos, speed) {\n         this.pos = pos;\n         this.speed = speed;\n         this.size = new Vec(1, 1)\n      }\n      get type() {\n         return 'monster'\n      }\n      static create(pos) {\n         return new Monster(pos, new Vec(-2, 7))\n      }\n      collide(state) {\n         return new State(state.level, state.actors, 'lost');\n      }\n      update(time, state) {\n         let xSpeed = this.speed.x;\n         let pos = this.pos;\n         let movedX = pos.plus(new Vec(xSpeed * time, 0))\n         if (!state.level.touches(movedX, this.size, [\"wall\", \"lava\"])) {\n            pos = movedX\n         } else {\n            xSpeed = -this.speed.x;\n         }\n         let ySpeed = this.speed.y;\n         let movedY = pos.plus(new Vec(0, ySpeed * time));\n         if (!state.level.touches(movedY, this.size, [\"wall\", \"lava\"])) {\n            pos = movedY\n         }\n         return new Monster(pos, new Vec(xSpeed, ySpeed))\n      }\n   }\n\n   class Dragon {\n      constructor(pos, speed, fire = { isFire: false, lastShot: 0 }) {\n         this.pos = pos;\n         this.speed = speed;\n         this.size = new Vec(1.5, 1.5)\n         this.fire = fire;\n      }\n      get type() {\n         return 'dragon'\n      }\n      static create(pos) {\n         return new Dragon(pos, new Vec(0, 0))\n      }\n      collide(state) {\n         return new State(state.level, state.actors, 'lost')\n      }\n      firing(state) {\n         let xSpeed = this.speed.x > 0 ? 5 : -5\n         let fire = new Fire(this.pos, new Vec(xSpeed, 0))\n         let actors = state.actors;\n         actors.push(fire)\n         return new State(state.level, actors, state.status)\n      }\n      update(time, state) {\n         let player = state.player\n         //会跟踪player，一定距离之内会喷火\n\n         let xDistance = player.pos.x - this.pos.x;\n         let xSpeed = xDistance > 0 ? 2 : -2\n         if (Math.abs(xDistance) < 0.1) {\n            xSpeed = 0;\n         }\n         let pos = this.pos;\n         let movedX = pos.plus(new Vec(xSpeed * time, 0))\n         if (!state.level.touches(movedX, this.size, [\"wall\", \"lava\"])) {\n            pos = movedX\n         }\n\n         let yDistance = player.pos.y - this.pos.y;\n         let ySpeed = yDistance > 0 ? 2.5 : -1.5\n         if (Math.abs(yDistance) < 0.1) ySpeed = 0;\n         let movedY = pos.plus(new Vec(0, ySpeed * time));\n         if (!state.level.touches(movedY, this.size, [\"wall\", \"lava\"])) {\n            pos = movedY\n         }\n         //考虑要不要喷火,设定3秒冷却时间\n         let fire = this.fire;\n         if (Math.abs(xDistance) < 10 && Math.abs(yDistance) < 10 &&\n            Date.now() - fire.lastShot > 3000) {\n            fire.isFire = true;\n            fire.lastShot = Date.now()\n         } else {\n            this.fire.isFire = false;\n         }\n\n         return new Dragon(pos, new Vec(xSpeed, ySpeed), fire)\n      }\n   }\n\n   class Fire {\n      constructor(pos, speed, gone = false) {\n         this.pos = pos;\n         this.speed = speed;\n         this.size = new Vec(0.8, 1.4)\n         this.gravity = 10;\n         this.isGone = gone;\n      }\n      get type() {\n         return 'fire'\n      }\n      static create(pos) {\n         return new Fire(pos, new Vec(0, 0))\n      }\n      collide(state) {\n         return new State(state.level, state.actors, 'lost')\n      }\n      gone(state) {\n         let filtered = state.actors.filter(a => a != this);\n         return new State(state.level, filtered, state.status)\n      }\n      update(time, state) {\n         let pos = this.pos;\n         let xSpeed = this.speed.x\n         let gone = this.isGone;\n         let movedX = pos.plus(new Vec(xSpeed * time, 0))\n         if (!state.level.touches(movedX, this.size, [\"wall\", \"lava\"])) {\n            pos = movedX\n         } else {\n            gone = true;\n         }\n         let ySpeed = this.speed.y + this.gravity * time;\n         let movedY = pos.plus(new Vec(0, ySpeed * time));\n         if (!state.level.touches(movedY, this.size, [\"wall\", \"lava\"])) {\n            pos = movedY\n         } else {\n            gone = true;\n         }\n         return new Fire(pos, new Vec(xSpeed, ySpeed), gone)\n      }\n   }\n\n   var levelChars = {\n      \".\": \"empty\", \"#\": \"wall\", \"+\": \"lava\",\n      \"@\": Player, \"o\": Coin,\n      \"=\": Lava, \"|\": Lava, \"v\": Lava, 'm': Monster,\n      \"d\": Dragon, \"f\": Fire\n   };\n\n   //第二章：actors之间的碰撞与更新、state的更新\n\n   function overlap(moveActor, hitActor) {\n      //测试上下左右的碰撞位置\n      let actor1Left = moveActor.pos.x\n      let actor1Right = moveActor.size.x + moveActor.pos.x;\n      let actor1Top = moveActor.pos.y;\n      let actor1Bottom = moveActor.pos.y + moveActor.size.y;\n      let actor2Left = hitActor.pos.x\n      let actor2Right = hitActor.size.x + hitActor.pos.x;\n      let actor2Top = hitActor.pos.y;\n      let actor2Bottom = hitActor.pos.y + hitActor.size.y;\n      let hitPosition = {\n         top: false,\n         left: false,\n         right: false,\n         bottom: false\n      };\n      let hit = false;\n      if (actor1Right - actor2Left < hitActor.size.x &&\n         actor1Right - actor2Left > 0 &&\n         actor2Right - actor1Left > hitActor.size.x &&\n         actor1Top < actor2Bottom && actor1Bottom > actor2Top) {\n         hitPosition.left = true;\n         hit = true\n      }\n      if (actor2Right - actor1Left < hitActor.size.x &&\n         actor2Right - actor1Left > 0 &&\n         actor1Right - actor2Left > hitActor.size.x &&\n         actor1Top < actor2Bottom && actor1Bottom > actor2Top) {\n         hitPosition.right = true;\n         hit = true;\n      }\n      if (actor1Bottom - actor2Top < hitActor.size.y &&\n         actor1Bottom - actor2Top > 0 &&\n         actor2Bottom - actor1Top > hitActor.size.y &&\n         actor1Left < actor2Right && actor1Right > actor2Left) {\n         hitPosition.top = true;\n         hit = true;\n      }\n      if (actor2Bottom - actor1Top < hitActor.size.y &&\n         actor2Bottom - actor1Top > 0 &&\n         actor1Bottom - actor2Top > hitActor.size.y &&\n         actor1Left < actor2Right && actor1Right > actor2Left) {\n         hitPosition.bottom = true;\n         hit = true;\n      }\n      return hit ? hitPosition : hit\n\n   }\n   //第三章：canvas\n\n   function flipHorizontally(context, around) {\n      context.translate(around, 0);\n      context.scale(-1, 1);\n      context.translate(-around, 0);\n   }\n\n   ////渲染模式\n   class CanvasDisplay {\n      constructor(level, gameClass) {\n         this.canvas = document.createElement(\"canvas\");\n         this.canvas.style.display = 'block';\n         this.canvas.style.margin = 'auto'\n         this.canvas.width = Math.min(gameWidth, level.width * scale);\n         this.canvas.height = Math.min(gameHeight, level.height * scale);\n         gameClass.dom.appendChild(this.canvas);\n         this.cx = this.canvas.getContext(\"2d\");\n         this.flipPlayer = false;\n         this.flipDragon = false;\n         this.flipMonster = false;\n         this.flipFire = false;\n         this.viewport = {\n            left: 0,\n            top: 0,\n            //屏幕的3分之一\n            width: this.canvas.width / scale,\n            height: this.canvas.height / scale\n         };\n         this.gameClass = gameClass;\n      }\n      clear() {\n         this.canvas.remove();\n      }\n      updateViewport(state) {\n         let view = this.viewport, margin_width = view.width / 3, margin_height = view.height / 3;\n         let player = state.player;\n         let center = player.pos.plus(player.size.times(0.5));\n\n         if (center.x < view.left + margin_width) {\n            view.left = Math.max(center.x - margin_width, 0);\n         } else if (center.x > view.left + view.width - margin_width) {\n            view.left = Math.min(center.x + margin_width - view.width,\n               state.level.width - view.width);\n         }\n         if (center.y < view.top + margin_height) {\n            view.top = Math.max(center.y - margin_height, 0);\n         } else if (center.y > view.top + view.height - margin_height) {\n            view.top = Math.min(center.y + margin_height - view.height,\n               state.level.height - view.height);\n         }\n      }\n      clearDisplay(status) {\n         //通过game对应的level找到调出渲染的参数\n         let backgroundImage = this.gameClass.backgroundImage;\n         if (backgroundImage !== null) {\n            //处理游戏背景\n            this.cx.drawImage(backgroundImage, 0, 0, this.canvas.width, this.canvas.height)\n         } else {\n            //default background setting\n            if (status == \"won\") {\n               this.cx.fillStyle = \"rgb(68, 191, 255)\";\n            } else if (status == \"lost\") {\n               this.cx.fillStyle = \"rgb(44, 136, 214)\";\n            } else {\n               this.cx.fillStyle = this.gameClass.backgroundColor || \"rgb(52, 166, 251)\";\n            }\n            this.cx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n         }\n      }\n      drawBackground(level) {\n         let { left, top, width, height } = this.viewport;\n         let xStart = Math.floor(left);\n         let xEnd = Math.ceil(left + width);\n         let yStart = Math.floor(top);\n         let yEnd = Math.ceil(top + height);\n\n         for (let y = yStart; y < yEnd; y++) {\n            for (let x = xStart; x < xEnd; x++) {\n               let tile = level.rows[y][x];\n               if (tile == \"empty\") continue;\n               let screenX = (x - left) * scale;\n               let screenY = (y - top) * scale;\n               let tileX = tile == \"lava\" ? 2 * scale : 0;\n               this.cx.drawImage(otherSprites, tileX, 0, 2 * scale, 2 * scale,\n                  screenX, screenY, scale, scale);\n            }\n         }\n      }\n      drawPlayer(player, x, y, width, height) {\n         const playerXOverlap = 4;\n         width += playerXOverlap * 2;\n         x -= playerXOverlap;\n\n         if (player.speed.x != 0) {\n            this.flipPlayer = player.speed.x < 0;\n         }\n\n         let tile = 8;\n         if (player.speed.y != 0) {\n            tile = 9;\n         } else if (player.speed.x != 0) {\n            tile = Math.floor(Date.now() / 60) % 8;\n         }\n\n         this.cx.save();\n         if (this.flipPlayer) {\n            flipHorizontally(this.cx, x + width / 2);\n         }\n         let tileX = tile *  48;\n         this.cx.drawImage(this.gameClass.playerSprites, tileX, 0, 48, 60, x, y, width, height);\n         this.cx.restore();\n      }\n      drawMonster(monster, x, y, width, height) {\n         if (monster.speed.x != 0) {\n            this.flipMonster = monster.speed.x > 0;\n         }\n         this.cx.save();\n         if (this.flipMonster) {\n            flipHorizontally(this.cx, x + width / 2);\n         }\n         this.cx.drawImage(monsterSprites, x, y, width, height)\n         this.cx.restore()\n      }\n      drawDragon(dragon, x, y, width, height) {\n         if (dragon.speed.x != 0) {\n            this.flipDragon = dragon.speed.x > 0;\n         }\n         this.cx.save();\n         if (this.flipDragon) {\n            flipHorizontally(this.cx, x + width / 2);\n         }\n         let tile;\n         let afterFire = Date.now() - dragon.fire.lastShot;\n         if (afterFire < 240) {\n            //显示喷火图案\n            if (afterFire < 60) tile = 0;\n            else if (afterFire < 120) tile = 1;\n            else if (afterFire < 180) tile = 2;\n            else tile = 3\n            this.cx.drawImage(toFireSRC[tile], x, y, width, height)\n         } else {\n            //飞行图案\n            tile = Math.floor(Date.now() / 60) % 10;\n            this.cx.drawImage(dragonSpritesSRC[tile], x, y, width, height)\n         }\n         this.cx.restore()\n\n      }\n      drawFire(fire, x, y, width, height) {\n         if (fire.speed.x != 0) {\n            this.flipFire = fire.speed.x < 0;\n         }\n         let tile;\n         if (fire.speed.y < 2) {\n            tile = 0\n         } else if (fire.speed.y < 6) {\n            tile = 1\n         } else if (fire.speed.y < 10) {\n            tile = 2\n         } else {\n            tile = 3;\n         }\n         this.cx.save();\n         if (this.flipFire) {\n            flipHorizontally(this.cx, x + width / 2);\n         }\n         this.cx.drawImage(fireSpritesSRC[tile], x, y, width, height)\n         this.cx.restore()\n      }\n      drawActors(actors,status) {\n         for (let actor of actors) {\n            let width = actor.size.x * scale;\n            let height = actor.size.y * scale;\n            let x = (actor.pos.x - this.viewport.left) * scale;\n            let y = (actor.pos.y - this.viewport.top) * scale;\n            if (actor.type == \"player\") {\n               if (status !== 'lost'){\n               this.drawPlayer(actor, x, y, width, height);\n            }else{\n               this.cx.font =\\`\\${actor.size.y * 30 }px Arial\\`\n               this.cx.fillText(\"💥\",x,y+actor.size.y*20)\n               this.cx.restore()\n            }\n            } else if (actor.type == \"monster\") {\n               this.drawMonster(actor, x, y, width, height)\n            } else if (actor.type == \"dragon\") {\n               this.drawDragon(actor, x, y, width, height)\n            } else if (actor.type == \"fire\") {\n               this.drawFire(actor, x, y, width, height)\n            } else {\n               let tileX = (actor.type == \"coin\" ? 2 : 1) * 2 * scale;\n               this.cx.drawImage(otherSprites, tileX, 0, 2 * width, 2 * height, x, y, width, height);\n            }\n         }\n      }\n      drawProperty(actors) {\n         let numberOfCoin = actors.reduce((total, each) => {\n            each = each.type == 'coin' ? 1 : 0;\n            return total + each\n         }, 0);\n         this.cx.font = '15px Arial';\n         this.cx.fillStyle = 'red';\n         this.cx.fillText(\\`👦: \\${ this.gameClass.lives } \\`, 10, 30);\n         this.cx.fillText(\\`💰: \\${ numberOfCoin } \\`, 10, 55)\n         if (this.gameClass.totalLevel != 1) {\n            this.cx.fillText(\\`L: \\${ this.gameClass.level + 1 } /\\${this.gameClass.totalLevel}\\`, 15, 80)\n         }\n      }\nsyncState(state) {\n  this.updateViewport(state);\n  this.clearDisplay(state.status);\n  this.drawBackground(state.level);\n  this.drawActors(state.actors,state.status);\n  this.drawProperty(state.actors)\n}\n   }\n\n//最后一章：游戏的运行\n\nfunction runAnimation(frameFunc) {\n  let lastTime = null;\n  function frame(time) {\n    if (lastTime != null) {\n      let timeStep = Math.min(time - lastTime, 100) / 1000;\n      if (frameFunc(timeStep) === false) return;\n    }\n    lastTime = time;\n    requestAnimationFrame(frame);\n  }\n  requestAnimationFrame(frame);\n}\n\n\nfunction runLevel(level, gameClass) {\n  let display = new CanvasDisplay(level, gameClass);\n  let state = State.start(level);\n  let ending = 1;\n  let running = \"yes\";\n\n  return new Promise(resolve => {\n    function escHandler(event) {\n      if (event.key != \"Escape\") return;\n      event.preventDefault();\n      if (running == \"no\") {\n        running = \"yes\";\n        //true的时候，再call一次runAnimation\n        runAnimation(frame);\n      } else {\n        running = \"no\";\n      }\n    }\n    window.addEventListener(\"keydown\", escHandler);\n    let arrowKeys = trackKeys([\"ArrowLeft\", \"ArrowRight\", \"ArrowUp\"]);\n    function frame(time) {\n      if (running == \"no\") {\n        return false;\n      }\n      state = state.update(time, arrowKeys, gameClass);\n      display.syncState(state);\n      if (state.status == \"playing\") {\n        return true;\n      } else if (ending > 0) {\n        ending -= time;\n        return true;\n      } else {\n        display.clear();\n        window.removeEventListener(\"keydown\", escHandler);\n        arrowKeys.unregister();\n        resolve(state.status);\n        return false;\n      }\n    }\n    runAnimation(frame);\n  });\n}\n\nfunction trackKeys(keys) {\n  let down = Object.create(null);\n  function track(event) {\n    if (keys.includes(event.key)) {\n      down[event.key] = event.type == \"keydown\";\n      event.preventDefault();\n    }\n  }\n  window.addEventListener(\"keydown\", track);\n  window.addEventListener(\"keyup\", track);\n  down.unregister = () => {\n    window.removeEventListener(\"keydown\", track);\n    window.removeEventListener(\"keyup\", track);\n  };\n  return down;\n}\n\n\nclass Game {\n  constructor(dom) {\n    this.dom = dom;\n    this.playerSprites = srcToImage(playerSRC);\n    this.backgroundColor = \"rgb(52, 166, 251)\";\n    this.backgroundImage = null;\n    this.lives = 3;\n    this.speed = 7;\n    this.size = 1;\n    this.jumpSpeed = 17;\n  }\n   async runGame(plans, levelSettings = [], globalSettings) {\n      return new Promise(async (resolve) => {\n         //更改全球设置\n         if (globalSettings != undefined) {\n            this.mutate(globalSettings)\n         }\n         let startLives = this.lives\n         this.totalLevel = plans.length;\n         for (let level = 0; level < plans.length;) {\n            //重置属性\n            this.backgroundImage = null;\n            this.level = level;\n            //修改级别属性\n            if (levelSettings.length > 0) {\n               this.mutate(levelSettings[level])\n            }\n            let status = await runLevel(new Level(plans[level]), this);\n            if (status == 'won') {\n               level++\n            } else {\n               this.lives--;\n            }\n            if (this.lives == 0) {\n               level = 0;\n               this.lives = startLives;\n            }\n         }\n         resolve('won')\n      })\n      }\n      mutate(valueToBeMutated) {\n         let keys = Object.keys(valueToBeMutated);\n         keys.forEach(key => {\n            if (this[key] === undefined) throw new Error('no such property: ' + key)\n      \n            if (valueToBeMutated[key] != undefined) {\n               //这里要转化为image\n               if (key == 'backgroundImage' || key =='playerSprites'){\n                  let image = new Image();\n                  image.src = valueToBeMutated[key];\n                  this[key] = image;\n                  return;\n               }\n               this[key] = valueToBeMutated[key]\n            }\n         })\n      }\n\n\n}\n\n  function elt(type, props,style,...children) {\n    let dom = document.createElement(type);\n    if (props) Object.assign(dom, props);\n    if (style) {\n      for (let key in style){\n        dom.style[key] = style[key]\n      }\n    }\n    for (let child of children) {\n      if (typeof child != \"string\") dom.appendChild(child);\n      else dom.appendChild(document.createTextNode(child));\n    }\n    return dom;\n  }\n\n\n  let startUpFacebackgroundStyle = startUpFacebackgroundStyleToBeReplaced\n  let startBtnStyleFromVuex = startBtnStyleToBeReplace\n  let startUpBtnText = startUpBtnTextToBeReplace\n  let textComponents = textComponentsToBeReplace\n  let pictureComponents = pictureComponentsToBeReplace\n\n\n  let endFacebackgroundStyle = endFacebackgroundStyleToBeReplaced\n  let textFlowStyleFromVuex = textFlowStyleFromVuexToBeReplaced\n  let textFlowAnimationFromVuex = textFlowAnimationFromVuexToBeReplaced\n  let textFlowContent = textFlowContentToBeReplaced\n  let endTextComponents = endTextComponentsToBeReplace\n  let endPictureComponents = endPictureComponentsToBeReplace\n \n  //开头界面部分\n  let startUpFaceStyle = Object.assign({},startUpFacebackgroundStyle,{\n    margin: \"auto\",\n    position: \"relative\",\n    width: \"700px\",\n    height: \"400px\",\n    overflow: \"hidden\",\n    backgroundPosition: \"center\",\n  })\n\n  let startBtnStyle = Object.assign({},startBtnStyleFromVuex,{position: \"absolute\"})\n\n  let startBtnProps = {\n    type:'button',\n    onclick: async ()=>{\n      document.querySelector('.startUpFaceContainer').remove()\n      await new Game(document.querySelector('#game')).runGame(GAME_LEVELS,gameSettings,globalSettings);\n      document.body.appendChild(endFaceContainer)\n      return endFaceAnimation()\n    }\n  }\n\n  let pictureDom = pictureComponents.map(component=>{\n    return elt('div',null,component.style,elt('img',{src:component.url,width:component.width}))\n   })\n  let textDom = textComponents.map(component=>{\n    return elt('div',null,component.style,component.textContent);\n  }) \n  let startBtn = elt('button', startBtnProps,startBtnStyle,startUpBtnText)\n  let startUpFaceContainer = elt('div', {className:'startUpFaceContainer'},startUpFaceStyle, startBtn,...textDom,...pictureDom)\n  document.body.appendChild(startUpFaceContainer)\n\n   //结尾界面部分\n  let endFaceStyle = Object.assign({},endFacebackgroundStyle,{\n    margin: \"auto\",\n    position: \"relative\",\n    width: \"700px\",\n    height: \"400px\",\n    overflow: \"hidden\",\n    backgroundPosition: \"center\",\n  })\n  let endPictureDom = endPictureComponents.map(component=>{\n    return elt('div',null,component.style,elt('img',{src:component.url,width:component.width}))\n   })\n  let endTextDom = endTextComponents.map(component=>{\n    return elt('div',null,component.style,component.textContent);\n  }) \n\n  let textFlowDom = elt('pre',null,textFlowStyleFromVuex,textFlowContent);\n  let endFaceContainer = elt('div',{className:'endFaceContainer'},endFaceStyle,textFlowDom,...endTextDom,...endPictureDom)\n\n  function pixelTypeTransfer(value) {\n      if (typeof value == \"string\") {\n        return Number(value.match(/-?\\\\d+/)[0]);\n      } else {\n        return value + \"px\";\n      }\n   }\n\n  function endFaceAnimation(){\n     let {\n        animation,\n        animationTime,\n        animationDistance,\n        animationDir\n      } = textFlowAnimationFromVuex\n      if (animation == false || animationTime == 0 || animationDistance == 0)\n        return;\n      let time = animationTime * 1000;\n      let start = 0;\n      if (animationDir == \"top\" || animationDir == \"bottom\") {\n        let distance =\n          animationDir == \"top\" ? -1 * animationDistance : animationDistance;\n        let animate = setInterval(() => {\n          textFlowDom.style.top =\n            pixelTypeTransfer(textFlowDom.style.top) +\n            (distance / time) * 60 +\n            \"px\";\n          start += 60;\n          if (start > time) clearInterval(animate);\n        }, 60);\n      } else {\n        let distance =\n          animationDir == \"left\" ? -1 * animationDistance : animationDistance;\n        let animate = setInterval(() => {\n          textFlowDom.style.left =\n            pixelTypeTransfer(textFlowDom.style.left) +\n            (distance / time) * 60 +\n            \"px\";\n          start += 60;\n          if (start > time) clearInterval(animate);\n        }, 60);\n      }\n  }\n\n</script >\n\n\n</html >\n`","<template>\n  <div id=\"entireGame\">\n    <div\n      v-if=\"runningGame!=null&&gameEnd==false\"\n      style=\"font-size:15px;color:red;font-weight:600\"\n    >{{lang === 1 ? \"上、左、右键移动角色，esc键暂停\" : \"Press [left,right,up] key to move player. Press [esc]key to pause the game.\"}}</div>\n    <!-- 开始界面 -->\n    <div class=\"startUpFace\" v-bind:style=\"backgroundStyle\" v-if=\"runningGame==null\">\n      <button v-bind:style=\"startUpBtn\" v-on:click=\"startGame()\">{{startUpBtnText}}</button>\n      <div\n        class=\"textItem\"\n        v-for=\"(item,index) in processTextComponent\"\n        :key=\"'textItem' + index\"\n        :style=\"item.style\"\n      >{{item.textContent}}</div>\n      <div\n        class=\"imgItem\"\n        v-for=\"(item,index) in processPictureComponent\"\n        :key=\"'pictureItem' + index\"\n        :style=\"item.style\"\n      >\n        <img :src=\"item.url\" :width=\"item.width\">\n      </div>\n    </div>\n\n    <!-- 结束界面 -->\n    <div class=\"endFace\" v-bind:style=\"endBackgroundStyle\" v-if=\"gameEnd\">\n      <pre class=\"textFlow\" v-bind:style=\"textFlowRealTimeStyle\">{{endProcessTextFlow.textContent}}</pre>\n      <div\n        class=\"textItem\"\n        v-for=\"(item,index) in endProcessTextComponent\"\n        :key=\"'textItem' + index\"\n        :style=\"item.style\"\n      >{{item.textContent}}</div>\n      <div\n        class=\"imgItem\"\n        v-for=\"(item,index) in endProcessPictureComponent\"\n        :key=\"'pictureItem' + index\"\n        :style=\"item.style\"\n      >\n        <img :src=\"item.url\" :width=\"item.width\">\n      </div>\n    </div>\n\n    <div class=\"gameContainer\"></div>\n\n    <!-- 按键组 -->\n    <div class=\"btnGroup\">\n      <button @click=\"goToPlayerFigureDesign()\" class=\"designBtn\">\n        <font-awesome-icon icon=\"male\" class=\"fa-lg\"/>&nbsp;{{lang===1?\"角色设计\":\"Player\"}}\n      </button>\n      <button @click=\"goToGameDesign()\" class=\"designBtn\">\n        <font-awesome-icon icon=\"gamepad\" class=\"fa-lg\"/>&nbsp;{{lang===1?\"游戏设计\":\"Level\"}}\n      </button>\n      <button @click=\"goToStartUpAndEndDesign()\" class=\"designBtn\">\n        <font-awesome-icon icon=\"laptop\" class=\"fa-lg\"/>&nbsp;{{lang===1?\"界面设计\":\"Interface\"}}\n      </button>\n      <button @click=\"reset()\">{{!gameEnd?`${lang===1?\"结束游戏\":\"reset\"}`:`${lang === 1 ?\"重置游戏\":\"reset\"}`}}</button>\n      <button @click=\"save()\">{{lang === 1 ?\"保存\":\"save\"}}</button>\n      <button @click=\"restore()\">{{lang === 1 ?\"恢复\":\"restore\"}}</button>\n      <button @click=\"downloadTheGame()\">{{lang === 1 ? \"下载\":\"download\"}}</button>\n    </div>\n\n    <!-- 下载弹出框 -->\n    <div class=\"downLoadConfirm\"></div>\n  </div>\n</template>\n\n<script>\nimport Game from \"../lib/pureGame\";\nimport gameLevel from \"../lib/gameLevel\";\nimport { mapState, mapGetters} from \"vuex\";\nimport gameTemplate from \"@/lib/gameTemplate\";\nimport mobileRouterDevice from \"@/lib/mobileRouterProtect\";\n\nlet pics = {};\nimportAll(require.context(\"../pic/pureGame/\", false, /\\.png$/));\nfunction importAll(r) {\n  r.keys().forEach(key => (pics[key] = r(key)));\n}\n\nexport default {\n  name: \"entrieGame\",\n  mixins: [mobileRouterDevice],\n  beforeRouteLeave(to, from, next) {\n    if (this.runningGame == null) {\n      next();\n      return;\n    }\n    this.runningGame.stopGame();\n    next();\n  },\n  beforeRouteEnter(from,to,next){\n    //ie浏览器下不允许\n    function isIE() {\n      let ua = navigator.userAgent;\n      var is_ie = ua.indexOf(\"MSIE \") > -1 || ua.indexOf(\"Trident/\") > -1;\n\n      return is_ie;\n    }\n    if (isIE()) {\n      alert('抱歉，目前不支持该浏览器，可以使用Chrome,Edge,Opera,Firefox,Safari等浏览器')\n      next(false)\n    }else{\n      next()\n    }\n  },\n  mounted() {\n    this.textFlowRealTimeStyle = JSON.parse(\n      JSON.stringify(this.endProcessTextFlow.style)\n    );\n  },\n  data: function() {\n    return {\n      runningGame: null,\n      gameEnd: false,\n      textFlowRealTimeStyle: null\n    };\n  },\n  watch: {\n    gameEnd() {\n      if (this.gameEnd == false) return;\n      this.textFlowRealTimeStyle.top = this.endProcessTextFlow.style.top;\n      this.textFlowRealTimeStyle.left = this.endProcessTextFlow.style.left;\n      let {\n        animation,\n        animationTime,\n        animationDistance,\n        animationDir\n      } = this.endProcessTextFlow.animate;\n      if (animation == false || animationTime == 0 || animationDistance == 0)\n        return;\n      let time = animationTime * 1000;\n      let start = 0;\n      if (animationDir == \"top\" || animationDir == \"bottom\") {\n        let distance =\n          animationDir == \"top\" ? -1 * animationDistance : animationDistance;\n        let animate = setInterval(() => {\n          this.textFlowRealTimeStyle.top =\n            this.pixelTypeTransfer(this.textFlowRealTimeStyle.top) +\n            (distance / time) * 60 +\n            \"px\";\n          start += 60;\n          if (start > time) clearInterval(animate);\n        }, 60);\n      } else {\n        let distance =\n          animationDir == \"left\" ? -1 * animationDistance : animationDistance;\n        let animate = setInterval(() => {\n          this.textFlowRealTimeStyle.left =\n            this.pixelTypeTransfer(this.textFlowRealTimeStyle.left) +\n            (distance / time) * 60 +\n            \"px\";\n          start += 60;\n          if (start > time) clearInterval(animate);\n        }, 60);\n      }\n    }\n  },\n  computed: {\n    ...mapState(\"playerFigure\", {\n      playerFigureImgData: \"imgData\",\n      playerFigureWidth: null\n    }),\n    ...mapState(\"gameLevel\", [\n      \"levelMap\",\n      \"levelSetting\",\n      \"currentLevel\",\n      \"structureDesign\",\n      \"globalPlayerSetting\"\n    ]),\n    ...mapState(\"startUpFace\", [\n      \"startUpBtn\",\n      \"backgroundStyle\",\n      \"startUpBtnText\"\n    ]),\n    ...mapGetters(\"startUpFace\", [\n      \"processTextComponent\",\n      \"processPictureComponent\"\n    ]),\n    ...mapState(\"endFace\", {\n      endBackgroundStyle: \"backgroundStyle\"\n    }),\n    ...mapGetters(\"endFace\", {\n      endProcessTextComponent: \"processTextComponent\",\n      endProcessPictureComponent: \"processPictureComponent\",\n      endProcessTextFlow: \"processTextFlow\"\n    }),\n    gameContainer() {\n      return document.querySelector(\".gameContainer\");\n    },\n    playerFigure() {\n      let src = this.$store.state.playerFigure.result;\n      if (src == null) return null;\n      let image = new Image();\n      image.src = this.$store.state.playerFigure.result;\n      return image;\n    },\n    lang(){\n      return this.$store.state.lang\n    }\n  },\n  methods: {\n    save() {\n      store(\"gameLevel\", this.$store.state.gameLevel);\n      store(\"startUpFace\", this.$store.state.startUpFace);\n      store(\"endFace\", this.$store.state.endFace);\n      alert(`${this.lang === 1 ?\"已保存!\":\"Saved!\"}`);\n\n      function store(name, data) {\n        localStorage.setItem(name, JSON.stringify(data));\n      }\n    },\n    restore() {\n      restoreData(\"gameLevel\", this);\n      restoreData(\"startUpFace\", this);\n      restoreData(\"endFace\", this);\n      alert(`${this.lang === 1 ?\"已恢复, 请重新开始游戏!\":\"Done! Please restart the game!\"}`);\n      function restoreData(name, self) {\n        let data = localStorage.getItem(name);\n        if (data != null)\n          self.$store.commit(name + \"/restoreData\", JSON.parse(data));\n      }\n    },\n    reset() {\n      if (this.gameEnd == true) {\n        //游戏已经结束\n        this.gameEnd = false;\n        this.runningGame = null;\n        return;\n      } else {\n        //游戏正在进行中或还没有开始\n        if (this.runningGame != null) this.runningGame.stopGame();\n      }\n    },\n    pixelTypeTransfer(value) {\n      if (typeof value == \"string\") {\n        return Number(value.match(/-?\\d+/)[0]);\n      } else {\n        return value + \"px\";\n      }\n    },\n    async startGame() {\n      let levelMap = this.levelMap.length == 0 ? gameLevel : this.levelMap;\n      this.runningGame = new Game(this.gameContainer);\n      await this.runningGame.runGame(\n        levelMap,\n        this.levelSetting,\n        this.globalPlayerSetting\n      );\n      this.gameEnd = true;\n    },\n    goToPlayerFigureDesign() {\n      this.$router.push(\"/playerFigure/combine\");\n    },\n    goToGameDesign() {\n      this.$router.push(\"/gameDesign\");\n    },\n    goToStartUpAndEndDesign() {\n      this.$router.push(\"/startUpAndEndDesign\");\n    },\n    async downloadTheGame() {\n      var gameName = window.prompt(\"输入游戏名称\", \"diyGame\");\n      if (gameName == null) return;\n      let blob = new Blob(await manipulateHTML(gameTemplate, this), {\n        text: \"text/plain\"\n      });\n      let url = window.URL.createObjectURL(blob);\n      let link = document.createElement(\"a\");\n      document.body.appendChild(link);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", gameName + \".html\");\n      link.click();\n      link.remove();\n\n      function manipulateHTML(htmlFile, self) {\n        return new Promise(async resolve => {\n          let otherSprites = await getImage(\"sprites.png\", pics);\n          let playerSprites = await getImage(\"player.png\", pics);\n          let monsterSprites = await getImage(\"Monster1.png\", pics);\n          let dragonSpritesSRC = await getImage(\"dragon.png\", pics, 10);\n          let fireSpritesSRC = await getImage(\"fire.png\", pics, 4);\n          let toFireSRC = await getImage(\"tofire.png\", pics, 8);\n\n          let result = applyChange(htmlFile, [\n            {\n              spot: \"endFacebackgroundStyleToBeReplaced\",\n              value: self.endBackgroundStyle\n            },\n            {\n              spot: \"textFlowStyleFromVuexToBeReplaced\",\n              value: self.endProcessTextFlow.style\n            },\n            {\n              spot: \"textFlowAnimationFromVuexToBeReplaced\",\n              value: self.endProcessTextFlow.animate\n            },\n            {\n              spot: \"textFlowContentToBeReplaced\",\n              value: self.endProcessTextFlow.textContent\n            },\n            {\n              spot: \"endTextComponentsToBeReplace\",\n              value: self.endProcessTextComponent\n            },\n            {\n              spot: \"endPictureComponentsToBeReplace\",\n              value: self.endProcessPictureComponent\n            },\n            {\n              spot: \"pictureComponentsToBeReplace\",\n              value: self.processPictureComponent\n            },\n            {\n              spot: \"textComponentsToBeReplace\",\n              value: self.processTextComponent\n            },\n            {\n              spot: \"startUpFacebackgroundStyleToBeReplaced\",\n              value: self.backgroundStyle\n            },\n            {\n              spot: \"startBtnStyleToBeReplace\",\n              value: self.startUpBtn\n            },\n            {\n              spot: \"startUpBtnTextToBeReplace\",\n              value: self.startUpBtnText\n            },\n            {\n              spot: \"gameLevelToBeReplaced\",\n              value: self.levelMap.length == 0 ? gameLevel : self.levelMap\n            },\n            {\n              spot: \"gameSettingsToBeReplaced\",\n              value: self.levelSetting\n            },\n            {\n              spot: \"globalSettingsToBeReplaced\",\n              value: self.globalPlayerSetting\n            },\n            {\n              spot: \"spritesToBeReplaced\",\n              value: otherSprites\n            },\n            {\n              spot: \"playerToBeReplaced\",\n              value: playerSprites\n            },\n            {\n              spot: \"monsterToBeReplaced\",\n              value: monsterSprites\n            },\n            {\n              spot: \"drgonToBeReplaced\",\n              value: dragonSpritesSRC\n            },\n            {\n              spot: \"fileToBeReplaced\",\n              value: fireSpritesSRC\n            },\n            {\n              spot: \"dragonToFireToBeReplaced\",\n              value: toFireSRC\n            }\n          ]);\n          resolve([result]);\n\n          function getImage(name, requireContext, length) {\n            //获得每个图的url\n            if (length == undefined) {\n              //先用canvas画出来，使用toDataURL获得url，然后最后去除canvas和image。\n              let src = requireContext[\"./\" + name];\n              if (src == undefined) throw new Error(\"no such image\");\n              let image = new Image();\n              image.src = src;\n              return new Promise(resolve => {\n                image.onload = () => {\n                  let canvas = document.createElement(\"canvas\");\n                  canvas.width = image.width;\n                  canvas.height = image.height;\n                  let cx = canvas.getContext(\"2d\");\n                  document.body.appendChild(canvas);\n                  cx.drawImage(image, 0, 0);\n                  let url = canvas.toDataURL();\n                  canvas.remove();\n                  image.remove();\n                  resolve(url);\n                };\n              });\n            } else {\n              return new Promise(resolve => {\n                let pictureGroup = Array.apply(null, { length: length }).map(\n                  function(_, index) {\n                    let fileIndex = index + 1;\n                    let fileName = name.replace(/[.]/, fileIndex + \".\");\n                    return getImage(fileName, requireContext);\n                  }\n                );\n                Promise.all(pictureGroup).then(result => resolve(result));\n              });\n            }\n          }\n          function applyChange(file, changes) {\n            for (let change of changes) {\n              file = file.replace(\n                new RegExp(change.spot),\n                JSON.stringify(change.value)\n              );\n            }\n            return file;\n          }\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../lib/_consistentStyle\";\n\n#entireGame {\n  padding-top: 50px;\n}\n\n.gameContainer {\n  padding: 0;\n}\n\n.btnGroup {\n  width: 700px;\n  min-width: 700px;\n  margin: auto;\n  button {\n    @include buttonStyle(14.28%, 25px);\n    border-radius: 0px;\n    background-color: #f1f1f1;\n    &:hover {\n      outline: none;\n    }\n    &:focus {\n      outline: none;\n    }\n  }\n  .designBtn {\n    color: #3f51b5;\n    font-weight: bold;\n  }\n}\n\n.startUpFace {\n  margin: auto;\n  position: relative;\n  width: 700px;\n  min-width: 700px;\n  height: 400px;\n  overflow: hidden;\n  background-position: center;\n  button {\n    position: absolute;\n    &:hover {\n      cursor: pointer;\n    }\n  }\n}\n\n.endFace {\n  @extend .startUpFace;\n}\n</style>\n\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./entireGame.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./entireGame.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./entireGame.vue?vue&type=template&id=7c255a12&scoped=true&\"\nimport script from \"./entireGame.vue?vue&type=script&lang=js&\"\nexport * from \"./entireGame.vue?vue&type=script&lang=js&\"\nimport style0 from \"./entireGame.vue?vue&type=style&index=0&id=7c255a12&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7c255a12\",\n  null\n  \n)\n\nexport default component.exports","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./entireGame.vue?vue&type=style&index=0&id=7c255a12&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./entireGame.vue?vue&type=style&index=0&id=7c255a12&lang=scss&scoped=true&\"","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$getOwnPropertyDescriptor from \"../../core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"../../core-js/object/keys\";\nimport defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","export default {\n   created(){\n      if (this.is_touch_device()) {\n         alert(`${this.lang === 1 ?\"游戏设计需在电脑端完成，以获得最佳体验\"\n         :\"To get the best experience, please start your design on computer.\"}`)\n         this.$router.push('/')\n      }\n   },\n   methods:{\n      is_touch_device() {\n         return (\n            \"ontouchstart\" in window ||\n            navigator.MaxTouchPoints > 0 ||\n            navigator.msMaxTouchPoints > 0\n         );\n      },\n   }\n}","require('../../modules/es6.symbol');\nmodule.exports = require('../../modules/_core').Object.getOwnPropertySymbols;\n","module.exports = require(\"core-js/library/fn/json/stringify\");","require('../../modules/es6.object.get-own-property-descriptor');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n"],"sourceRoot":""}